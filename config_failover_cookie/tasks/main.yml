# Failover key once generated needs to be re-used for failover cookies to work

# Check if the failover key already exixts
- name: Check if Failover Cookie Already exists - {{ config_failover_cookie_filename }}
  stat:
    path: "{{ config_failover_cookie_filename }}"
  when: config_failover_cookie_filename is defined
  register: failover

# If the failover key exists then import it
- name: Import failover key
  isam:
    appliance: "{{ inventory_hostname }}"
    username:  "{{ username }}"
    password:  "{{ password }}"
    lmi_port:  "{{ lmi_port }}"
    log:       "{{ log_level }}"
    force:     "{{ force }}"
    action: ibmsecurity.isam.web.sso_keys.import_key
    isamapi:
      id:       "{{ config_failover_cookie_id }}"
      filename: "{{ config_failover_cookie_filename }}"
  when: failover.stat.exists and config_failover_cookie_filename is defined and config_failover_cookie_id is defined
  notify: Commit Changes

# If failover key does not exists then create it
- name: Create failover key
  isam:
    appliance: "{{ inventory_hostname }}"
    username:  "{{ username }}"
    password:  "{{ password }}"
    lmi_port:  "{{ lmi_port }}"
    log:       "{{ log_level }}"
    force:     "{{ force }}"
    action: ibmsecurity.isam.web.sso_keys.add
    isamapi:
       ssokey_name: "{{ config_failover_cookie_id }}"
  when: failover.stat.exists == False and config_failover_cookie_id is defined
  notify: Commit Changes

# Commit changes before proceeding
- meta: flush_handlers

# Export the newly created failover key for reuse
- name: Export failover key
  isam:
    appliance: "{{ inventory_hostname }}"
    username:  "{{ username }}"
    password:  "{{ password }}"
    lmi_port:  "{{ lmi_port }}"
    log:       "{{ log_level }}"
    force:     "{{ force }}"
    action: ibmsecurity.isam.web.sso_keys.export_key
    isamapi:
      id:       "{{ config_failover_cookie_id }}"
      filename: "{{ config_failover_cookie_filename }}"
  # Check mode means key would not be created - so check for it
  when: failover.stat.exists == False and not ansible_check_mode and config_failover_cookie_id is defined and config_failover_cookie_filename is defined
  notify: Commit Changes

# Configure Reverse Proxy configuration to support failover cookies
- name: Reverse Proxy Failover configuration
  isam:
    appliance: "{{ inventory_hostname }}"
    username:  "{{ username }}"
    password:  "{{ password }}"
    lmi_port:  "{{ lmi_port }}"
    log:       "{{ log_level }}"
    force:     "{{ force }}"
    action: ibmsecurity.isam.web.reverse_proxy.configuration.entry.update
    isamapi:
      reverseproxy_id: "{{ config_failover_cookie_reverseproxy_id }}"
      stanza_id:       "{{ item.stanza }}"
      entry_id:        "{{ item.entry }}"
      value_id:        "{{ item.value }}"
  with_items:
  - stanza: "session-cookie-domains"
    entry: "domain"
    value: "{{config_failover_cookie_domain}}"
  - stanza: "failover"
    entry: "failover-cookie-name"
    value: "{{config_failover_cookie_failover_cookie_name}}"
  - stanza: "failover"
    entry: "failover-cookie-lifetime"
    value: "{{config_failover_cookie_failover_cookie_lifetime}}"
  - stanza: "failover"
    entry: "failover-auth"
    value: "{{config_failover_cookie_failover_auth}}"
  - stanza: "failover"
    entry: "failover-cookies-keyfile"
    value: "{{config_failover_cookie_id}}"
  - stanza: "failover"
    entry: "enable-failover-cookie-for-domain"
    value: "{{config_failover_cookie_enable_failover_cookie_for_domain}}"
  - stanza: "failover"
    entry: "failover-include-session-id"
    value: "{{config_failover_cookie_failover_include_session_id}}"
  - stanza: "failover"
    entry: "reissue-missing-failover-cookie"
    value: "{{config_failover_cookie_reissue_missing_failover_cookie}}"
  - stanza: "failover-add-attributes"
    entry: "tagvalue_failover_amweb_session_id"
    value: "{{config_failover_cookie_tagvalue_failover_amweb_session_id_add}}"
  - stanza: "failover-restore-attributes"
    entry: "tagvalue_failover_amweb_session_id"
    value: "{{config_failover_cookie_tagvalue_failover_amweb_session_id_preserve}}"
  when: config_failover_cookie_domain is defined
  notify:
  - Commit Changes
  - Restart Reverse Proxy


